#!/usr/bin/perl -w
#
# Reads debian/docs, installs all files listed there into
# /usr/share/doc/$PACKAGE
# Also installs the debian/copyright and debian/README.debian and debian/TODO
# and handles debian/doc-base.

use Debian::Debhelper::Dh_Lib;
init();

foreach $PACKAGE (@{$dh{DOPACKAGES}}) {
	$TMP=tmpdir($PACKAGE);
	$file=pkgfile($PACKAGE,"docs");

	# If this is a symlink, leave it alone.
	if ( ! -d "$TMP/usr/share/doc/$PACKAGE" &&
	     ! -l "$TMP/usr/share/doc/$PACKAGE") {
		doit("install","-g",0,"-o",0,"-d","$TMP/usr/share/doc/$PACKAGE");
	}

	undef @docs;

	if ($file) {
		@docs=filearray($file);
	}

	if (($PACKAGE eq $dh{FIRSTPACKAGE} || $dh{PARAMS_ALL}) && @ARGV) {
		push @docs, @ARGV;
	}

	if (@docs) {
		doit("cp", "-a",@docs,"$TMP/usr/share/doc/$PACKAGE/");
		doit("chown","-R","0.0","$TMP/usr/share/doc");
		doit("chmod","-R","go=rX","$TMP/usr/share/doc");
		doit("chmod","-R","u+rw","$TMP/usr/share/doc");
	}

	# .Debian is correct, according to policy, but I'm easy.
	$readme_debian=pkgfile($PACKAGE,'README.Debian');
	if (! $readme_debian) {
		$readme_debian=pkgfile($PACKAGE,'README.debian');
	}
	if ($readme_debian) {
		doit("install","-g",0,"-o",0,"-m","644","-p","$readme_debian",
			"$TMP/usr/share/doc/$PACKAGE/README.Debian");
	}

	$todo=pkgfile($PACKAGE,'TODO');
	if ($todo) {
		if (isnative($PACKAGE)) {
			doit("install","-g",0,"-o",0,"-m","644","-p",$todo,
				"$TMP/usr/share/doc/$PACKAGE/TODO");
		}
		else {
			doit("install","-g",0,"-o",0,"-m","644","-p",$todo,
				"$TMP/usr/share/doc/$PACKAGE/TODO.Debian");
		}
	}

	# Support debian/package.copyright, but if not present, fall back
	# on debian/copyright for all packages, not just the main binary
	# package.
	$copyright=pkgfile($PACKAGE,'copyright');
	if (! $copyright && -e "debian/copyright") {
		$copyright="debian/copyright";
	}
	if ($copyright) {
			doit("install","-g",0,"-o",0,"-m","644","-p",$copyright,
				"$TMP/usr/share/doc/$PACKAGE/copyright");
	}

	# Add in the /usr/doc compatability symlinks code.
	if (! $dh{NOSCRIPTS}) {
		autoscript($PACKAGE,"postinst","postinst-doc",
			"s/#PACKAGE#/$PACKAGE/g",
		);
		autoscript($PACKAGE,"prerm","prerm-doc",
			"s/#PACKAGE#/$PACKAGE/g",
		);
	}

	# Handle doc-base files. There are two filename formats, the usual
	# plus an extended format (debian/package.*).
	my %doc_ids;
	
	opendir(DEB,"debian/") || error("can't read debian directory: $!");
	# If this is the main package, we need to handle unprefixed filenames.
	# For all packages, we must support both the usual filename format plus
	# that format with a period an something appended.
	my $regexp="\Q$PACKAGE\E\.";
	if ($PACKAGE eq $dh{MAINPACKAGE}) {
		$regexp="(|$regexp)";
	}
	foreach my $fn (grep {/^${regexp}doc-base(\..*)?$/} readdir(DEB)) {
		# Parse the file to get the doc id.
		open (IN, "debian/$fn") || die "Cannot read debian/$fn.";
		while (<IN>) {
			if (/^Document:\s+(.*)(\s+)?/) {
				$doc_ids{$fn}=$1;
				last;
			}
		}
		close IN;
	}
	closedir(DEB);
	
	if (%doc_ids) {
		if (! -d "$TMP/usr/share/doc-base/") {
			doit("install","-g",0,"-o",0,"-d","$TMP/usr/share/doc-base/");
		}
	}
	foreach my $fn (keys %doc_ids) {
		doit("install","-g",0,"-o",0,"-m644","-p","debian/$fn",
		     "$TMP/usr/share/doc-base/$doc_ids{$fn}");
		if (! $dh{NOSCRIPTS}) {
			autoscript($PACKAGE,"postinst","postinst-doc-base",
				"s/#DOC-ID#/$doc_ids{$fn}/",
			);
			autoscript($PACKAGE,"prerm","prerm-doc-base",
				"s/#DOC-ID#/$doc_ids{$fn}/",
			);
		}
	}
}

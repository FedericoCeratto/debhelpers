#!/usr/bin/perl -w

=head1 NAME

dh_installdebconf - install files used by debconf in package build directories

=cut

use strict;
use Debian::Debhelper::Dh_Lib;

=head1 SYNOPSIS

B<dh_installdebconf> [S<I<debhelper options>>] [B<-n>] [S<B<--> I<params>>]

=head1 DESCRIPTION

dh_installdebconf is a debhelper program that is responsible for installing
files used by the debconf package into package build directories.

It also automatically generates the postrm commands needed to interface
with debconf. The commands are added to the maintainer scripts by
dh_installdeb. See L<dh_installdeb(1)> for an explanation of how that
works.

Files named debian/package.config and debian/package.templates are
installed into the DEBIAN directory in the package build directory.
If a file named debian/package.config.debhelper exists, the contents
of that file are merged into the config script as follows: If the script 
exists, then anywhere in it that "#DEBHELPER#" appears, the text of the 
.debhelper file is inserted. If the script does not exist, then a script 
is generated from the .debhelper file. The .debhelper files may be created 
by other debhelper programs, and are shell script fragments.

Note that if you use debconf, your package probably needs to depend on it
(it will be added to ${misc:Depends} by this program).

Note that for your config script to be called by dpkg, your postinst
needs to source debconf's confmodule. dh_installdebconf does not
install this statement into postinst automatically as it it too hard to
do it right.

=head1 LOCALIZED TEMPLATE FILES

This program will look to see if you have a debian/po directory and if so
will automatically call L<po2debconf(1)> to generate a merged templates
file containing the translations. For this to work, your package should
build-depend on po-debconf.

=head1 OPTIONS

=over 4

=item B<-n>, B<--noscripts>

Do not modify postrm script.

=item B<--> I<params>

Pass the params to po2debconf.

=back

=cut

init();

my @extraparams;
if (defined($dh{U_PARAMS})) {
	@extraparams=@{$dh{U_PARAMS}};
}

foreach my $package (@{$dh{DOPACKAGES}}) {
	my $tmp=tmpdir($package);
	my $config=pkgfile($package,"config");
	my $templates=pkgfile($package,"templates");

	if (! -d "$tmp/DEBIAN") {
		doit("install","-o",0,"-g",0,"-d","$tmp/DEBIAN");
	}

	if (! is_udeb($package)) {
		debhelper_script_subst($package, "config");
	}
	
	if ($templates ne '') {
		# Are there old-style translated templates?
		if (glob("$templates.??"), glob("$templates.??_??")) {
			warning "Ignoring debian/templates.ll files. Switch to po-debconf!";
		}

		umask(0022); # since I do a redirect below
		
		if (-d "debian/po") {
			complex_doit("po2debconf @extraparams $templates > $tmp/DEBIAN/templates");
		}
		else {
			doit("install", "-o", 0, "-g", 0, "-m", 644, "-p",
			     $templates, "$tmp/DEBIAN/templates");
		}
	}

	# I'm going with debconf 0.5 because it was the first
	# "modern" one. udebs just need cdebconf.
	my $debconfdep=is_udeb($package) ? "cdebconf-udeb" : "debconf (>= 0.5) | debconf-2.0";
	if ($config ne '' || $templates ne '') {
		addsubstvar($package, "misc:Depends", $debconfdep);
	}
	else {
		addsubstvar($package, "misc:Depends", $debconfdep, undef, 1); # remove
	}
	
	if (($config ne '' || $templates ne '') && ! $dh{NOSCRIPTS}) {
		autoscript($package,"postrm","postrm-debconf");
	}
}

=head1 SEE ALSO

L<debhelper(7)>

This program is a part of debhelper.

=head1 AUTHOR

Joey Hess <joeyh@debian.org>

=cut

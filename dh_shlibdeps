#!/usr/bin/perl -w

=head1 NAME

dh_shlibdeps - calculate shared library dependencies

=cut

use strict;
use Cwd;
use Debian::Debhelper::Dh_Lib;

=head1 SYNOPSIS

B<dh_shlibdeps> [S<I<debhelper options>>] [B<-L>I<package>] [B<-l>I<directory>] [B<-X>I<item>] [S<B<--> I<params>>]

=head1 DESCRIPTION

dh_shlibdeps is a debhelper program that is responsible for calculating
shared library dependencies for packages.

This program is merely a wrapper around L<dpkg-shlibdeps(1)> that calls it
once for each package listed in the control file, passing it
a list of ELF executables and shared libraries it has found.

=head1 OPTIONS

=over 4

=item B<-u>I<params>, B<--dpkg-shlibdeps-params=>I<params>

=item B<--> I<params>

Pass "params" to L<dpkg-shlibdeps(1)>.

=item B<-X>I<item>, B<--exclude=>I<item>

Exclude files that contain "item" anywhere in their filename from being
passed to dpkg-shlibdeps. This will make their dependencies be ignored.
This may be useful in some situations, but use it with caution. This option
may be used more than once to exclude more than one thing.

=item B<-l>I<directory>[:directory:directory:..]

With recent versions of dpkg-shlibdeps, this option is generally not
needed.

Before dpkg-shlibdeps is run, LD_LIBRARY_PATH will have added to it the 
specified directory (or directories -- separate with colons). With recent
versions of dpkg-shlibdeps, this is mostly only useful for packages that
build multiple flavors of the same library, or other situations where
the library is installed into a directory not on the regular library search
path.

=item B<-L>I<package>, B<--libpackage=>I<package>

With recent versions of dpkg-shlibdeps, this option is generally not
needed.

Tell dpkg-shlibdeps to use the shlibs file automatically generated by
dh_makeshlibs for the named package instead of the shlibs.local file.

=back

=head1 EXAMPLES

Suppose that your source package produces libfoo1, libfoo-dev, and
libfoo-bin binary packages. libfoo-bin links against libfoo1, and should
depend on it. In your rules file, first run dh_makeshlibs, then dh_shlibdeps:

	dh_makeshlibs
	dh_shlibdeps

This will have the effect of generating automatically a shlibs file for
libfoo1, and using that file and the libfoo1 library in the
debian/libfoo1/usr/lib directory to calculate shared library dependency
information.

=cut

init();

if ($dh{L_PARAMS}) {
	my @paths=();
	# Add to existing paths, if set.
	push @paths, $ENV{'LD_LIBRARY_PATH'}
		if exists $ENV{'LD_LIBRARY_PATH'};
	foreach (split(/:/, $dh{L_PARAMS})) {
		# Force the path absolute.
		if (m:^/:) {
			push @paths, $_;
		}
		else {
			push @paths, "/$_";
		}
	}
	$dh{L_PARAMS}=join(':', @paths);
}

foreach my $package (@{$dh{DOPACKAGES}}) {
	my $tmp=tmpdir($package);
	my $ext=pkgext($package);

	my @filelist;
	my $ff;

	# Generate a list of ELF binaries in the package, ignoring any
	# we were told to exclude.
	my $find_options='';
	if (defined($dh{EXCLUDE_FIND}) && $dh{EXCLUDE_FIND} ne '') {
		$find_options="! \\( $dh{EXCLUDE_FIND} \\)";
	}
	foreach my $file (split(/\n/,`find $tmp -path $tmp/usr/lib/debug -prune -or -type f \\( -perm +111 -or -name "*.so*" \\) $find_options -print`)) {
		# TODO this is slow, optimize. Ie, file can run once on
		# multiple files..
		$ff=`file "$file"`;
		if ($ff=~m/ELF/ && $ff!~/statically linked/) {
			push @filelist,$file;
		}
	}

	if (@filelist) {
		my @opts;
		if (defined $dh{LIBPACKAGE} && length $dh{LIBPACKAGE}) {
			@opts=("-L".tmpdir($dh{LIBPACKAGE}."/DEBIAN/shlibs"));
		}
		
		push @opts, "-tudeb" if is_udeb($package);
		
		my $ld_library_path_orig=$ENV{LD_LIBRARY_PATH};
		if ($dh{L_PARAMS}) {
			$ENV{LD_LIBRARY_PATH}=$dh{L_PARAMS};
			verbose_print("LD_LIBRARY_PATH=$dh{L_PARAMS}");
		}
		
		doit("dpkg-shlibdeps","-Tdebian/${ext}substvars",
			@opts,@{$dh{U_PARAMS}},@filelist);

		if ($dh{L_PARAMS}) {
			if (defined $ld_library_path_orig) {
				$ENV{LD_LIBRARY_PATH}=$ld_library_path_orig;
			}
			else {
				delete $ENV{LD_LIBRARY_PATH};
			}
		}
	}
}

=head1 SEE ALSO

L<debhelper(7)>, L<dpkg-shlibdeps(1)>

This program is a part of debhelper.

=head1 AUTHOR

Joey Hess <joeyh@debian.org>

=cut
